# This is a sample environment variables file that gets loaded automatically via the Figaro gem in self-hosted situations
# If you are running this is a hosted environment (Heroku etc) then these will have to be set some other way.
#
# WARNING DO NOT COMMIT THIS FILE AFTER RENAMING IT.
#
# Steps for setup
# 1. Copy this file into the same `/config` folder
# 2. Rename the file to `application.yml`
# 3. Set `DIFFERENTIATE_AS` to the type of scraper this should become (see options below)
# 4. Follow set up instructions for the specific service (see below)
# 5. Run `$ rails secret` from the command line and put in the `secret_key_base` variable below]
# 6. If you want to set up Slack notification for errors following the instructions for "Incoming Webook" at https://api.slack.com/apps
#	   and uncomment and set `SLACK_ERROR_WEBHOOK_URL` below.
# 7. If you're setting up an instance designed for testing or developing Zenodotus, set `ALLOW_CUSTOM_CALLBACK` to "true"
# 8. Add `ZENODOTUS_URL` to point to your Zenodotus instance for notifications when a scrape
#    is done if this is for production
# 9. AGAIN: DO NOT COMMIT THIS NEW FILE

# Options available: `instagram`, `facebook`
DIFFERENTIATE_AS: XXXXXXX

# Instagram setup:
# 1. Uncomment the lines below starting with `INSTAGRAM_USER_NAME` AND `INSTAGRAM_PASSWORD`
# 2. Create an Instagram user/password and add them to the appropriate variables below
# INSTAGRAM_USER_NAME: john_doe
# INSTAGRAM_PASSWORD: "password_goes_here"

# Facebook setup:
# 1. Uncomment the lines below starting with `FACEBOOK_USER_NAME` AND `FACEBOOK_PASSWORD`
# 2. Create an Facebook user/password and add them to the appropriate variables below 
# FACEBOOK_EMAIL: john_doe
# FACEBOOK_PASSWORD: "password_goes_here"

secret_key_base: XXXXXXX

# We default to requiring ZENODOTUS_URL as a callback unless we explicitly set it otherwise.
# Note: ZENODOTUS_URL can still be set, which will become the fallback if there's not a callback url passed in
ALLOW_CUSTOM_CALLBACK: false

# ZENODOTUS_URL: "XXXXXXXXXXXXX"
# SLACK_ERROR_WEBHOOK_URL: "https://hooks.slack.com/services/XXXXX/XXXXXX/XXXXXXXXX"

# This is for testing purposes which allows another system to force a scrape to happen now, skipping the queue.
# Defaults to false if not set
# ALLOW_FORCE: "false"
